package ginq

func join[Tfirst, Tsecond, Tkey, Tout](
	firstSelector func(Tfirst) Tkey,
	secondSelector func(Tsecond) Tkey,
	resultFunc func(Tkey, Tkey) Tout,
	firstSlice []Tfirst,
	secondSlice []Tsecond) []Tout {

	var out []Tout

	for _, firstItem := range firstSlice {
		firstSelected := firstSelector(firstItem)
		for _, secondItem := range secondSlice {
			secondSelected := secondSelector(secondItem)
			if firstSelected == secondSelected {
				out = append(out, resultFunc(firstSelected, secondSelected))
				break
			}
		}
	}

	return out
}

func groupJoin[Tfirst, Tsecond, Tkey, Tout](
	firstSelector func(Tfirst) Tkey,
	secondSelector func(Tsecond) Tkey,
	resultFunc func(Tfirst, []Tsecond) Tout,
	firstSlice []Tfirst,
	secondSlice []Tsecond) []Tout {

	var out []Tout

	for _, firstItem := range firstSlice {
		firstSelected := firstSelector(firstItem)
		var matches [] Tsecond
		for _, secondItem := range secondSlice {
			secondSelected := secondSelector(secondItem)
			if firstSelected == secondSelected {
				matches = append(matches, secondItem)
			}
		}
		out = append(out, resultFunc(firstItem, matches))
	}

	return out
}
