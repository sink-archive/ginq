package ginq

func select_[Tin, Tout](operation func(Tin) Tout, slice []interface{}) []Tout {
	correctTypeSlice := enforceSliceType[Tin](slice)
	var output []Tout

	for _, item := range correctTypeSlice {
		output = append(output, operation(item))
	}

	return output
}

func selectMany[Tin, Tout](operation func(Tin) [] Tout, slice []interface{}) [] Tout {
	correctTypeSlice := enforceSliceType[Tin](slice)
	var output []Tout

	for _, item := range correctTypeSlice {
		for _, resultItem := range operation(item) {
			output = append(output, resultItem)
		}
	}

	return output
}
