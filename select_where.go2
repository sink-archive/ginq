package ginq

func select_[Tin, Tout](operation func(Tin) Tout, slice []Tin) []Tout {
	correctTypeSlice := slice
	var out []Tout

	for _, item := range correctTypeSlice {
		out = append(out, operation(item))
	}

	return out
}

func selectMany[Tin, Tout](operation func(Tin) [] Tout, slice []Tin) []Tout {
	correctTypeSlice := slice
	var out []Tout

	for _, item := range correctTypeSlice {
		for _, resultItem := range operation(item) {
			out = append(out, resultItem)
		}
	}

	return out
}

func where[T](check func(T) bool, slice []T) []T {
	var out []T
	for _, item := range slice {
		if check(item) {
			out = append(out, item)
		}
	}

	return out
}